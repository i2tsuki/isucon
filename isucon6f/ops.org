* aws
aws --region "ap-northeast-1" ec2 run-instances \
    --image-id "ami-0567c164" \
    --key-name "ono-ka" \
    --security-group-ids "sg-bd1e43d9" \
    --instance-type "c4.large" \
    --monitoring Enabled=false \
    --subnet-id "subnet-1537f363" \
    --private-ip-address "10.0.1.4" \
    --iam-instance-profile Name=xxxxx-ci-web \
    --count 1 \
    --associate-public-ip-address
# AWS で作成 try!

* local
- server
#+BEGIN_SRC sh
IPISUS="127.0.0.1"
alias FORIPISUS='for i in ${IPISUS[@]}; do'
FORIPISUS echo $i; ssh $i 'sudo apt-get -yq update'; done
FORIPISUS echo $i; ssh -t $i 'sudo apt-get -yqq install -f lv tmux strace sysstat dstat dnsutils iproute vim curl jq nodejs tcpdump git rsync mysql-client-core-5.7'; done

tmux new -s kizkoh
sudo su
systemctl list-units | lv
systemctl stop isu.service
systemctl disable isu.service
systemctl stop docker.service
systemctl disable docker.service
#+END_SRC

- local
#+BEGIN_SRC sh
rsync -aviK ./isucon6f/etc/systemd/system isucon6f-isu01:~/
#+END_SRC

- server
#+BEGIN_SRC sh
chown -Rv root:root /home/isucon/system
rsync -n -aviK /home/isucon/system/ /etc/systemd/system/
rsync -aviK /home/isucon/system/ /etc/systemd/system/
rm -rfv /home/isucon/system
systemctl daemon-reload
#+END_SRC

- local
#+BEGIN_SRC sh
ln -sfnv /home/kinoo/repo/fork/isucon6-final/webapp/go/vendor src
GOPATH=/home/kinoo/repo/fork/isucon6-final/webapp/go go build -o webapp
rsync -aviK ./webapp isucon6f-isu01:~/webapp/go/webapp
#+END_SRC

- server
#+BEGIN_SRC sh
apt-get -yqq install mysql-server-5.7
# root password is empty
systemctl status mysql.service
mysql -uroot < /home/isucon/webapp/sql/00_create_database.sql
mysql -uroot < /home/isucon/webapp/sql/01_max_allowed_packet.sql
mysql -uroot < /home/isucon/webapp/sql/01_schema.sql
gunzip -c /home/isucon/webapp/sql/02_initial_data.sql.gz | mysql -u root
mysql -uroot -e 'SHOW DATABASES;'
mysql -uroot -e 'SHOW TABLES;' isuketch

# Change log: https://github.com/kizkoh/isucon6-final/commit/ff4e583cf1488ccb707ddece7fd0e626badf5fa4
systemctl start isu-go.service
systemctl status isu-go.service
systemctl enable isu-go.service

cd /home/isucon
curl -LO https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz
tar xvf node-v6.9.1-linux-x64.tar.xz
/home/isucon/node-v6.9.1-linux-x64/bin/node -v

su isucon
PATH=/home/isucon/node-v6.9.1-linux-x64/bin:${PATH}
cd /home/isucon/webapp/react
npm install
NODE_ENV=production npm run build
sudo su

systemctl start react1.service
systemctl status react1.service
systemctl enable react1.service
#+END_SRC

- server
#+BEGIN_SRC sh
systemctl stop nginx.service
systemctl status nginx.service
systemctl stop react1.service
systemctl status react1.service
apt-get -yqq install nginx-full
#+END_SRC

- local
#+BEGIN_SRC sh
rsync -aviK ./webapp/react/server.jsx isucon6f-isu01:~/webapp/react/server.jsx
#+END_SRC

- server
#+BEGIN_SRC sh
Change log: https://github.com/kizkoh/isucon6-final/commit/fb345c391d5a35e63a3a5e3eaad3f1e485af40ba
su isucon
PATH=/home/isucon/node-v6.9.1-linux-x64/bin:${PATH}
cd /home/isucon/webapp/react
NODE_ENV=production npm run build
sudo su
#+END_SRC

- local
#+BEGIN_SRC sh
rsync -aviK ./isucon6f/etc/systemd/system isucon6f-isu01:~/
#+END_SRC

- server
#+BEGIN_SRC sh
chown -Rv root:root /home/isucon/system
rsync -n -aviK /home/isucon/system/ /etc/systemd/system/
rsync -aviK /home/isucon/system/ /etc/systemd/system/
rm -rfv /home/isucon/system
systemctl daemon-reload

systemctl start react1.service
systemctl status react1.service
#+END_SRC

- local
#+BEGIN_SRC sh
rsync -aviK ./isucon6f/etc/nginx/nginx.conf isucon6f-isu01:~/
#+END_SRC

- server
#+BEGIN_SRC sh
chown -v root:root /home/isucon/nginx.conf
rsync -aviK /home/isucon/nginx.conf /etc/nginx/nginx.conf
rm -fv /home/isucon/nginx.conf
nginx -t -c /etc/nginx/nginx.conf
systemctl start nginx.service
systemctl status nginx.service
#+END_SRC

#+BEGIN_SRC sh
systemctl restart nginx.service
systemctl status nginx.service
#+END_SRC


#+BEGIN_SRC sh
# make gzip
su isucon
cd /home/isucon/webapp/react/public/
cp -pv ./bundle.js ./bundle.js.bak
gzip -c -7 ./bundle.js > ./bundle.js.gz
cp -pv ./favicon.ico ./favicon.ico.bak
gzip -c -7 ./favicon.ico.gz > ./favicon.ico.gz
cp -pv ./css/rc-color-picker.css ./css/rc-color-picker.css.bak
gzip -c -7 ./css/rc-color-picker.css  > ./css/rc-color-picker.css.gz
cp -pv ./css/sanitize.css ./css/sanitize.css.bak
gzip -c -7 ./css/sanitize.css  > ./css/sanitize.css.gz
#+END_SRC

- local
#+BEGIN_SRC sh
rsync -avRiK webapp/rust/release/webapp isucon6f-isu01:~/
#+END_SRC
