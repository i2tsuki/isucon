user www-data;
worker_processes 1;
pid /run/nginx.pid;

error_log stderr notice;

events {
    worker_connections 768;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format isucon '$time_local $msec\t$status\treqtime:$request_time\t'
                      'in:$request_length\tout:$bytes_sent\trequest:$request\t'
                      'acceptencoding:$http_accept_encoding\treferer:$http_referer\t'
                      'ua:$http_user_agent\thost$host';

    # access_log /var/log/nginx/access.log  isucon;
    access_log off;

    keepalive_timeout 3s;

    upstream isucon5000 {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        server 127.0.0.1:5000;
        keepalive 256;
    }

    server {
        location ~ /image/(.*) {
            proxy_request_buffering off;
            # client_body_temp_path /dev/shm/nginx_client_body 1 2;
            # 基本WebDAVモジュールで許可するメソッドを指定します。ここでは全てです。
            dav_methods PUT DELETE MKCOL COPY MOVE;
            # 拡張WebDAVモジュールで許可するメソッドを指定します。ここでは全てです。
            dav_ext_methods PROPFIND OPTIONS;

            dav_access user:rw group:rw all:r;
            create_full_put_path on;
            client_body_temp_path /var/nginx/webdav;
            root /var/nginx/webdav;
        }
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;

    root /home/isucon/webapp/public;

    location /robots.txt {
        return 404;
    }

    location ~ .*\.(css|js|img)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        etag off;
        root /home/isucon/webapp/public;
    }

    location /index.html {
        root /home/isucon/webapp/public;
    }

    location = / {
        set $ok "ok";
        if ($args != "") {
            set $ok "";
       }
       # if ($cookie_isuda_session != "") {
       #     set $ok "";
       # }
       if ($ok = "ok") {
           rewrite_log on;
           root /home/isucon/webapp/public;
           rewrite ^/(.*)$ /index.html last;
       }
       proxy_pass http://isucon5000;
    }

    location / {
        proxy_pass http://isucon5000;
    }
}
